{"version":3,"sources":["components/PokeContainer/Title/Title.js","Constants/Url_api.js","components/PokeContainer/PokeCardList/PokeCard.js","Services/TransformPokeDates.js","components/PokeContainer/PokeCardList/PokeCardList.js","components/PokeContainer/PokeContainer.js","components/NavBar/NavBar.js","components/PokeContainer/PokeCardList/SpecificPokemon.js","App.js","serviceWorker.js","index.js","assets/img/tituloPoke.png"],"names":["Title","react_default","a","createElement","className","src","TituloImg","alt","URL_API","URLID","URL_IMG","PokeCard","_ref","nombrePokemon","idPokemon","loading","Link","to","concat","CircularProgress_default","size","TransformPokeDates","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","getIdPokemon","setTimeout","setState","state","nombre","_this2","urlId","fetch","then","resolve","json","datoPokemon","id","_this$state","PokeCardList_PokeCard","Component","PokeCardList","handleUpdateClick","data","pokemones","results","getPokemonName","infoInput","nombrePokemonInput","target","value","filteredPokemon","filter","pokemon","name","indexOf","toLowerCase","type","onChange","placeholder","map","Services_TransformPokeDates","key","PokeContainer","PokeContainer_Title_Title","PokeContainer_PokeCardList_PokeCardList","NavBar","AppBar_default","position","Toolbar_default","Typography_default","variant","color","SpecificPokemon","getDatePokemon","match","params","dataPokemon","ability","abilities","types","base_experience","App","components_NavBar_NavBar","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.51fc381b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './title.css';\r\nimport TituloImg from './../../../assets/img/tituloPoke.png';\r\n\r\nconst Title = () =>{\r\n    return(\r\n        <div className=\"title\">\r\n                <img className=\"img-fluid\" src={TituloImg} alt=\"Pokepedia\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Title;","export const URL_API = \"https://pokeapi.co/api/v2/pokemon/?limit=151`\";\r\nexport const URLID= `https://pokeapi.co/api/v2/pokemon`;\r\nexport const URL_IMG = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon`;\r\n\r\n\r\n","import React from 'react';\r\nimport './stylesCard.css';\r\nimport { URL_IMG } from './../../../Constants/Url_api';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst PokeCard = ({nombrePokemon, idPokemon, loading}) =>{\r\n\r\n\r\n   return( \r\n \r\n    <div className=\"card border-light\">\r\n         <Link to={`/${idPokemon}`}>\r\n          <div className=\"card-body\">\r\n             {loading ? <CircularProgress size={30}/> : <img src={`${URL_IMG}/${idPokemon}.png`} alt={nombrePokemon}/>}\r\n          </div>  \r\n          <div className=\"card-header text-capitalize\">{nombrePokemon}</div>\r\n         </Link>\r\n       \r\n    </div>  \r\n\r\n   );\r\n}\r\n\r\nexport default PokeCard;\r\n","import React, { Component } from 'react';\r\nimport PokeCard from '../components/PokeContainer/PokeCardList/PokeCard';\r\nimport { URLID } from '../Constants/Url_api';\r\n\r\n\r\n\r\nclass TransformPokeDates extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        const {nombrePokemon}=props;\r\n        this.state ={\r\n            nombre: nombrePokemon,\r\n            idPokemon: null,\r\n            loading: true,\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        this.getIdPokemon();\r\n        setTimeout(() => this.setState({ loading: false }), 1500);\r\n\r\n   }\r\n\r\n   getIdPokemon( ){\r\n    const {nombre} =this.state;\r\n    const urlId= `${URLID}/${nombre}/`;\r\n    fetch( urlId ).then(resolve =>{\r\n        return resolve.json();\r\n    }).then(datoPokemon =>{\r\n       this.setState({\r\n           idPokemon : datoPokemon.id,\r\n         });   \r\n    });\r\n}\r\n   \r\nrender(){\r\n    const {nombre, idPokemon,loading}= this.state;\r\n    return(\r\n       <PokeCard nombrePokemon={nombre} idPokemon={idPokemon} loading={loading}/>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default TransformPokeDates;","import React, { Component } from 'react';\r\nimport { URL_API } from './../../../Constants/Url_api';\r\nimport './stylesCard.css';\r\nimport TransformPokeDates from '../../../Services/TransformPokeDates';\r\n\r\n\r\nclass PokeCardList extends Component {\r\n\r\n    \r\nconstructor(){\r\n    super();\r\n    this.state ={\r\n        pokemones: [],\r\n        nombrePokemonInput: '',\r\n    };\r\n}\r\n\r\ncomponentDidMount = () => {\r\n     this.handleUpdateClick();\r\n    \r\n}\r\n\r\n\r\n    handleUpdateClick = () => {\r\n         fetch( URL_API ).then(resolve =>{\r\n             return resolve.json();\r\n         }).then(data =>{\r\n        \r\n            this.setState({\r\n                pokemones : data.results,\r\n              });\r\n         });\r\n         \r\n     }\r\n\r\n     getPokemonName = (infoInput) => {\r\n        this.setState({nombrePokemonInput: infoInput.target.value});        \r\n    }\r\n    \r\n     \r\n\r\n  render(){\r\n        var {pokemones, nombrePokemonInput } =this.state;\r\n        const filteredPokemon = pokemones.filter(pokemon => {\r\n            return pokemon.name.indexOf(nombrePokemonInput.toLowerCase()) !== -1;\r\n          });\r\n        return(\r\n        <div>\r\n            <div className=\"container form-group has-search inputPokemon\">\r\n                <span className=\"fa fa-search form-control-feedback\"></span>\r\n                <input type=\"text\" onChange={this.getPokemonName}className=\"form-control\" placeholder=\"Ingresa el nombre del Pokémon\"/> \r\n        \r\n            </div>\r\n                 <div className=\"container padre\">\r\n                     <div className=\"row\">\r\n                             {filteredPokemon.map((pokemon)=><TransformPokeDates key={pokemon.name} nombrePokemon={pokemon.name}/>\r\n                )} \r\n                     </div> \r\n                 </div>\r\n        </div>     \r\n        );\r\n    }\r\n}\r\n\r\nexport default PokeCardList;","import React from 'react';\r\nimport Title from './Title/Title';\r\nimport PokeCardList from './PokeCardList/PokeCardList';\r\n\r\n\r\nconst PokeContainer = () =>{\r\n    return(\r\n        <div>\r\n            <Title/> \r\n            <PokeCardList/>                        \r\n        </div>\r\n        \r\n    );\r\n    \r\n}\r\n\r\nexport default PokeContainer;\r\n","import React from 'react';\r\nimport './NavBar.css';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst NavBar = () => {\r\n    return( \r\n        <AppBar className=\"AppBar\" position =\"sticky\">\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" color=\"inherit\">    \r\n                    Pokepedia\r\n                </Typography>    \r\n            </Toolbar>    \r\n        </AppBar> \r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n\r\n","import React, {Component} from 'react';\r\nimport { URLID, URL_IMG }from './../../../Constants/Url_api';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass SpecificPokemon extends Component {\r\n\r\nconstructor(props){\r\n  super(props);\r\n  const { id } = props.match.params; \r\n  this.state={\r\n    idPokemon:id,\r\n    dataPokemon:'',\r\n    ability:'',\r\n    type:'',\r\n  };\r\n}\r\n\r\ncomponentDidMount = () => {\r\n  this.getDatePokemon();\r\n \r\n\r\n}\r\n\r\ngetDatePokemon( ){\r\nconst {idPokemon} =this.state;\r\nconst urlId= `${URLID}/${idPokemon}/`;\r\nfetch( urlId ).then(resolve =>{\r\n  return resolve.json();\r\n}).then(datoPokemon =>{\r\n  const ability = datoPokemon.abilities[0].ability.name; \r\n  const type = datoPokemon.types[0].type.name;\r\n this.setState({\r\n     dataPokemon: datoPokemon,\r\n     ability,\r\n     type,\r\n   });   \r\n});\r\n}\r\n\r\nrender () {\r\nconst {idPokemon, dataPokemon,ability,type} = this.state;\r\nreturn (\r\n \r\n  <div className=\"mt-3\">\r\n    <div className=\"container\">\r\n        <div className=\"card-body tarjeta\">\r\n            <p className=\"text-capitalize\"><b>Name:</b> {dataPokemon.name}</p>\r\n            <img src={`${URL_IMG}/${idPokemon}.png`} alt={dataPokemon.name}/>\r\n            <p><b>N° Pokedex: #</b> {idPokemon}</p>\r\n            <p><b>Ability: </b> {ability} </p>\r\n            <p><b>Type: </b> {type} </p>\r\n            <p><b>Base Experience: </b> {dataPokemon.base_experience} </p>\r\n            <Link to={'/'}><button className=\"btn btn-danger\">Regresar</button></Link>\r\n        </div>\r\n    </div>    \r\n  </div>\r\n)\r\n};\r\n}\r\n  export default SpecificPokemon;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport PokeContainer from './components/PokeContainer/PokeContainer';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport SpecificPokemon from './components/PokeContainer/PokeCardList/SpecificPokemon';\r\n\r\nclass App extends Component {\r\n\r\n  \r\n  render() {\r\n  \r\n    return (\r\n      <div className=\"App\">\r\n          <NavBar/>\r\n          <Switch>\r\n            <Route exact path='/' component={ PokeContainer } />\r\n            <Route path='/:id' component={ SpecificPokemon } />\r\n          </Switch>    \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <App/>\r\n    </HashRouter>, \r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/tituloPoke.7ec8ab93.png\";"],"sourceRoot":""}